apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'maven-publish'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 22
        targetSdkVersion 28
        versionCode 2
        versionName "1.2.3"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}

publishing {

    repositories {
        maven {
            url "s3://dudelabs-maven-repo.dudesolutions.com.s3.amazonaws.com/release"
            credentials(AwsCredentials) {
                accessKey 'AKIAX6HNACOXRFCNSFMF'
                secretKey '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'
            }
        }
    }

    publications {
        awsPublication(MavenPublication) {
            groupId 'com.dudesolutions.dudematrix'
            artifactId 'dudematrix'
            version android.defaultConfig.versionName
            artifact("$buildDir/outputs/aar/dudelinearalgebra-release.aar")

            //generate pom nodes for dependencies
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.api.allDependencies.each { dependency ->
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', dependency.group)
                    dependencyNode.appendNode('artifactId', dependency.name)
                    dependencyNode.appendNode('version', dependency.version)
                }
            }
        }
    }
}
